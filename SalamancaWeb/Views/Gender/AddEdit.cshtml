@using SalamancaWeb.Models;
@model Gender
@{
    ViewBag.Title = (Model.idGender > 0 ? "Editar" : "Agregar") + " Genero";
    Layout = null;
}

@using(Html.BeginForm("Save", "Gender", FormMethod.Post, new { @id = "formulario", @autocomplete = "off" })) {
    @Html.HiddenFor(m => m.idGender)
    <div class="card">
        <div class="card-body">
            <div class="form-group">
                @Html.LabelFor(model => model.name)
                @Html.TextBoxFor(model => model.name, null, new { @class = "form-control", @placeholder = "Nombre del Genero" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.status)
                <br />
                <input type="checkbox" name="status" id="status" @(Model.status ? "checked" : "") data-bootstrap-switch data-off-color="danger" data-on-color="success" value="true">
                <input name="status" type="hidden" value="false">
            </div>
        </div>
        <div class="card-footer row">
            <div class="col-md-6">
                <button id="btnSave" data-message="@((Model.idGender > 0 ? "Modificando" : "Agregando") + " Genero...!!!")" type="submit" class="btn btn-primary btn-block"><i class="fas fa-save"></i>  Guardar</button>
            </div>
            <div class="col-md-6">
                <button data-dismiss="modal" class="btn btn-danger btn-block">Cancelar</button>
            </div>
        </div>
    </div>
}
<script src="~/Assets/model/actions/addedit.js"></script>
<script>
    $(function () {
        $('#formulario').validate({
            rules: {
                name: {
                    required: true,
                    maxlength: 50,
                    minlength: 3
                },
            },
            messages: {
                name: {
                    required: "Ingresar nombre del Genero",
                    maxlength: "El nombre del pais debe tener como máximo 50 caracteres",
                    minlength: "El nombre del pais debe tener como minimo 3 caracteres"
                },
            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }
        });
        //Switch
        $("input[data-bootstrap-switch]").each(function () {
            $(this).bootstrapSwitch('state', $(this).prop('checked'));
        })
    });
 </script>